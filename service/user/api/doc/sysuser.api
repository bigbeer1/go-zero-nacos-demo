syntax = "v1"


type (
    SysUserAddRequest {
		Account  string  `json:"account,optional"`  // 用户名
		NickName  string  `json:"nick_name,optional"`  // 姓名
		Password  string  `json:"password,optional"`  // 密码
		State  int64  `json:"state,optional"`  // 状态 1:正常 2:停用 3:封禁
    }

    SysUserDelRequest {
		Id  string  `path:"id"`  // 用户ID
    }

    SysUserUpRequest {
		Id  string  `json:"id"`  // 用户ID
		Account  string  `json:"account,optional"`  // 用户名
		NickName  string  `json:"nick_name,optional"`  // 姓名
		Password  string  `json:"password,optional"`  // 密码
		State  int64  `json:"state,optional"`  // 状态 1:正常 2:停用 3:封禁      
    }


    SysUserListRequest {
		Current  int64  `form:"current,default=1,optional"`  // 页码
		PageSize  int64  `form:"page_size,default=10,optional"`  // 页数
		Account  string  `form:"account,optional"`  // 用户名
		NickName  string  `form:"nick_name,optional"`  // 姓名
		Password  string  `form:"password,optional"`  // 密码
		State  int64  `form:"state,default=99,optional"`  // 状态 1:正常 2:停用 3:封禁       
    }

    SysUserInfoRequest {
		Id  string  `form:"id"`  // 用户ID          
    }

)

@server(
    //声明当前service下所有路由需要jwt鉴权，且会自动生成包含jwt逻辑的代码
    group: sysUser
)

service User {

    // 添加
    @handler SysUserAdd
    post /user/sysUser (SysUserAddRequest) returns (Response)

    // 删除
    @handler SysUserDel
    delete /user/sysUser/:id (SysUserDelRequest) returns (Response)

    // 更新
    @handler SysUserUp
    put /user/sysUser (SysUserUpRequest) returns (Response)

    // 分页查询
    @handler SysUserList
    get /user/sysUser (SysUserListRequest) returns (Response)

    // 查询详细信息
    @handler SysUserInfo
    get /user/sysUserInfo (SysUserInfoRequest) returns (Response)
}